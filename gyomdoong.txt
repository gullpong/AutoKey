import maple_story.txt INITIALIZE


assign HP_PORTION 55
assign MP_PORTION 20


register TOP_FLOOR_HEIGHT
assign TOP_FLOOR_HEIGHT 0

register BOTTOM_CEILING_HEIGHT
assign BOTTOM_CEILING_HEIGHT 0

register TURN_AROUND_PERCENTAGE
assign TURN_AROUND_PERCENTAGE 10

register JUMP_PERCENTAGE
assign JUMP_PERCENTAGE 30

register JUMP_DISABLE_COUNT
assign JUMP_DISABLE_COUNT 3

register UP_JUMP_DELAY
assign UP_JUMP_DELAY 1000

register DOWN_JUMP_DELAY
assign DOWN_JUMP_DELAY 0

register LONG_ATTACK_PERCENTAGE
assign LONG_ATTACK_PERCENTAGE 70


alias [PLAY_SETTINGS] among "USER_INPUT" "BRANCH_CAVE" "UPPER_CAVE" "LOWER_CAVE" "CHICKEN_RUN_1" "CHICKEN_RUN_2"
import gyomdoong_settings.txt [PLAY_SETTINGS]


register MOVE_TO_RIGHT
assign MOVE_TO_RIGHT true

register JUMP_TO_UP
assign JUMP_TO_UP true


register BUFF_CHARGE
assign BUFF_CHARGE false

register WIND_BOOSTER
assign WIND_BOOSTER false

register RANGED_TRUESHOT
assign RANGED_TRUESHOT false

register SPLIT_ARROW
assign SPLIT_ARROW false


sync	
	register _RANGED_TRUSHOT_ABLE
	register _SPLIT_ARROW_ABLE
	register _WIND_BOOSTER_ABLE
	
	register _READ with x y
	
	
	iterate forever
	
		snapshot

		import maple_story.txt LOCATE_PLAYER
		when PLAYER_POS.x is not below 0
			when PLAYER_POS.x is less than MOVE_DEST_RANGE.left
				assign MOVE_TO_RIGHT true
			end
			when PLAYER_POS.x is greater than MOVE_DEST_RANGE.right
				assign MOVE_TO_RIGHT false
			end
		end
		
		when PLAYER_POS.y is not below 0
			when PLAYER_POS.y is less than TOP_FLOOR_HEIGHT
				assign JUMP_TO_UP false
			end
			when PLAYER_POS.y is greater than BOTTOM_CEILING_HEIGHT
				assign JUMP_TO_UP true
			end
		end
		
		read _READ for "»≠ªÏ¿ª" of 255 170 170 over 0 705 560 720
		when _READ.x is greater than 0
			when BUFF_CHARGE is false
				assign BUFF_CHARGE true
			end
		end

		assign SKILL_INDEX.col 6
		assign SKILL_INDEX.row 0	
		import maple_story.txt CHECK_SKILL
		when SKILL_TEST is true
			when _WIND_BOOSTER_ABLE is greater than 5
				assign WIND_BOOSTER true
				assign _WIND_BOOSTER_ABLE 0
			end
			assign _WIND_BOOSTER_ABLE computing _WIND_BOOSTER_ABLE add 1
		otherwise
			assign _WIND_BOOSTER_ABLE 0
		end
		
		assign SKILL_INDEX.col 5
		assign SKILL_INDEX.row 1
		import maple_story.txt CHECK_SKILL
		when SKILL_TEST is true
			when _RANGED_TRUSHOT_ABLE is greater than 5
				assign RANGED_TRUESHOT true
				assign _RANGED_TRUSHOT_ABLE 0
			end
			assign _RANGED_TRUSHOT_ABLE computing _RANGED_TRUSHOT_ABLE add 1
		otherwise
			assign _RANGED_TRUSHOT_ABLE 0
		end
		
		assign SKILL_INDEX.col 6
		assign SKILL_INDEX.row 1
		import maple_story.txt CHECK_SKILL
		when SKILL_TEST is true
			when _SPLIT_ARROW_ABLE is greater than 5
				assign SPLIT_ARROW true
				assign _SPLIT_ARROW_ABLE 0
			end
			assign _SPLIT_ARROW_ABLE computing _SPLIT_ARROW_ABLE add 1
		otherwise
			assign _SPLIT_ARROW_ABLE 0
		end

		delay for MONITOR_DELAY
	end
	
with
	
	register _RANDOM
	register _ACTION
	register _JUMP_DISABLE

	iterate forever
	
		##########################################
		# BUFF
		##########################################
		when BUFF_CHARGE is true
			#delay for 1000
			key 0 for 500
			
			#key 5 for 500
			#delay for 500

			key 6 for 500
			delay for 500
			
			#key 7 for 500
			#delay for 500
			
			#key 8 for 500
			#delay for 500
			
			key 9 for 500
			assign BUFF_CHARGE false		
		end

		when WIND_BOOSTER is true
		    delay for 1000

			key w for 500
			delay for 500
			
			key 3 for 500
			delay for 500

			key 4 for 500
			delay for 500
			
			key 5 for 500
			delay for 500
			
			assign WIND_BOOSTER false
		end
		
		when SPLIT_ARROW is true
		    delay for 1000

			key g for 500
			delay for 500

			assign SPLIT_ARROW false
		end
		
		##########################################
		# SPECIAL ATTACK
		##########################################
		when RANGED_TRUESHOT is true
			sync
				when MOVE_TO_RIGHT is true
					key right for 300
				otherwise 
					key left for 300
				end
			with
				delay for 100
				key x for 100
				key x for 100
			end
			sync	
				when MOVE_TO_RIGHT is true
					key right for 1000
				otherwise 
					key left for 1000
				end
			with
				delay for 100
				key s for 100
				delay for 800
			end
			assign RANGED_TRUESHOT false
		end

		##########################################
		# MOVEMENT CONTROL
		##########################################	
		assign _RANDOM random over 100
		when _RANDOM is less than TURN_AROUND_PERCENTAGE		
			when MOVE_TO_RIGHT is true
				assign MOVE_TO_RIGHT false
			otherwise
				assign MOVE_TO_RIGHT true
			end
		end

		assign _ACTION 1
		when _JUMP_DISABLE is greater than JUMP_DISABLE_COUNT
			assign _RANDOM random over 100
			when _RANDOM is less than JUMP_PERCENTAGE
				assign _JUMP_DISABLE 0
				assign _ACTION 2				
			end
		end
		assign _JUMP_DISABLE computing _JUMP_DISABLE add 1
		
		##########################################
		# ATTACK
		##########################################		
		when _ACTION is equal to 1
			assign _RANDOM random over 100
			when _RANDOM is less than LONG_ATTACK_PERCENTAGE
				sync
					when MOVE_TO_RIGHT is true
						key right for 200
					otherwise 
						key left for 200
					end
				with
					key x for 100
					key x for 100
				end
				delay for 500
				#import gyomdoong_settings.txt BASIC_SHOT
				import gyomdoong_settings.txt BASIC_SHOT
				#delay for 100
			otherwise
				sync
					when MOVE_TO_RIGHT is true
						key right for 50
					otherwise 
						key left for 50
					end
				with
					key x for 50
				end
				import gyomdoong_settings.txt BASIC_SHOT
				#delay for 100
			end
		end

		##########################################
		# JUMP
		##########################################		
		when _ACTION is equal to 2
		
			when JUMP_TO_UP is true
				sync
					when MOVE_TO_RIGHT is true
						key right for 300
					otherwise 
						key left for 300
					end
				with
					key x for 200
					key up for 50
					key up for 50				
				end
				when MOVE_TO_RIGHT is true
					key right for UP_JUMP_DELAY
				otherwise 
					key left for UP_JUMP_DELAY
				end
				import gyomdoong_settings.txt BASIC_SHOT
				#delay for 100
			
			otherwise
				sync
					key down for 1200
				with
					when MOVE_TO_RIGHT is true
						key right for 200
					otherwise 
						key left for 200
					end
					key x for 100
					delay for 100
					import gyomdoong_settings.txt BASIC_SHOT
				end
				when MOVE_TO_RIGHT is true
					key right for DOWN_JUMP_DELAY
				otherwise 
					key left for DOWN_JUMP_DELAY
				end
				import gyomdoong_settings.txt BASIC_SHOT
				#delay for 100
			end
		end
		
	end
	
#with
#	iterate forever
#		assign BUFF_CHARGE true
#		delay for 4 min	
#	end

with
	iterate forever
		import maple_story.txt CHECK_TRUTH
		when TRUTH_TEST is true
			finish sync
		end		
		delay for 1000		
	end

with
	iterate forever
		import maple_story.txt CHECK_STONE
		when STONE_TEST is true		
			sound alert
			iterate 15 times
				key left for 200
				key right for 200
			end		
			finish sync
		end		
		delay for 1000		
	end
	
with
	iterate forever
		import maple_story.txt CLICK_OKAY
		import maple_story.txt CLICK_REWARD
		delay for 1000
	end
	
with
	iterate forever
		import maple_story.txt LOCATE_RPORTAL
		when RPORTAL_POS.x is greater than 0
			sound beep
		end
		delay for 1000
	end

with
	iterate forever
		delay for 3 min	
		key = for 500
	end

end

sound alert

