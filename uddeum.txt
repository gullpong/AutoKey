import maple_story.txt 초기화


assign HP_PORTION 40
assign MP_PORTION 10


register TOP_FLOOR_HEIGHT
assign TOP_FLOOR_HEIGHT 0

register BOTTOM_FLOOR_HEIGHT
assign BOTTOM_FLOOR_HEIGHT 0

register TURN_AROUND_PERCENTAGE
assign TURN_AROUND_PERCENTAGE 10

register JUMP_PERCENTAGE
assign JUMP_PERCENTAGE 30

register JUMP_DISABLE_COUNT
assign JUMP_DISABLE_COUNT 3

register UP_JUMP_DELAY
assign UP_JUMP_DELAY 1000

register DOWN_JUMP_DELAY
assign DOWN_JUMP_DELAY 0

alias [PLAY_SETTINGS] among "USER_INPUT" "CHRONO_TEMPLE_LANDSCAPE" "SIGNUS_KNIGHTS"
import uddeum_settings.txt [PLAY_SETTINGS]


register MOVE_TO_RIGHT
assign MOVE_TO_RIGHT true

register JUMP_TO_UP
assign JUMP_TO_UP true

register ON_TOP_FLOOR
assign ON_TOP_FLOOR false

register ON_BOTTOM_FLOOR
assign ON_BOTTOM_FLOOR false


register BUFF_CHARGE
assign BUFF_CHARGE false

register SPIRIT_LINK
assign SPIRIT_LINK false

register SPIRIT_EMBODY
assign SPIRIT_EMBODY false


sync
	register PL_POS with x y width height num lt tp rt bm
	
	register _SPIRIT_EMBODY_ABLE
	register _SPIRIT_LINK_ABLE
	
	iterate forever
	
		snapshot

		sub
			alias [MM_POS] PL_POS
			import maple_story.txt 플레이어위치_미니맵
		end
		when PL_POS.x is not below 0
			when PL_POS.x is less than MOVE_DEST_RANGE.left
				assign MOVE_TO_RIGHT true
			end
			when PL_POS.x is greater than MOVE_DEST_RANGE.right
				assign MOVE_TO_RIGHT false
			end
		end
		
		when PL_POS.y is not below 0
			when PL_POS.y is less than TOP_FLOOR_HEIGHT
				assign JUMP_TO_UP false
			end
			when PL_POS.y is greater than BOTTOM_FLOOR_HEIGHT
				assign JUMP_TO_UP true
			end
		end
		
		assign SKILL_INDEX.col 3
		assign SKILL_INDEX.row 1	
		import maple_story.txt 스킬활성화_체크	
		when SKILL_TEST is true
			when _SPIRIT_EMBODY_ABLE is greater than 5
				assign SPIRIT_EMBODY true
				assign _SPIRIT_EMBODY_ABLE 0
			end
			assign _SPIRIT_EMBODY_ABLE computing _SPIRIT_EMBODY_ABLE add 1
		otherwise
			assign _SPIRIT_EMBODY_ABLE 0
		end

		
		assign SKILL_INDEX.col 8
		assign SKILL_INDEX.row 0	
		import maple_story.txt 스킬활성화_체크	
		when SKILL_TEST is true
			when _SPIRIT_LINK_ABLE is greater than 5
				assign SPIRIT_LINK true
				assign _SPIRIT_LINK_ABLE 0
			end
			assign _SPIRIT_LINK_ABLE computing _SPIRIT_LINK_ABLE add 1
		otherwise
			assign _SPIRIT_LINK_ABLE 0
		end
		
		delay for MONITOR_DELAY
	end
	
with

	register _RANDOM
	register _ACTION
	register _JUMP_DISABLE

	iterate forever
	
		##########################################
		# BUFF
		##########################################
		when BUFF_CHARGE is true
			delay for 500
			key 9 for 500
			assign BUFF_CHARGE false		
		end

		when SPIRIT_LINK is true
		    delay for 500
			
			key 0 for 500
			delay for 500
			assign SPIRIT_LINK false
		end
		
		##########################################
		# SPECIAL ATTACK
		##########################################			
		when SPIRIT_EMBODY is true
			key h for 8000
			delay for 2000
			assign SPIRIT_EMBODY false
		end

		##########################################
		# MOVEMENT CONTROL
		##########################################	
		assign _RANDOM random over 100
		when _RANDOM is less than TURN_AROUND_PERCENTAGE		
			when MOVE_TO_RIGHT is true
				assign MOVE_TO_RIGHT false
			otherwise
				assign MOVE_TO_RIGHT true
			end
		end

		assign _ACTION 1
		when _JUMP_DISABLE is greater than JUMP_DISABLE_COUNT
			assign _RANDOM random over 100
			when _RANDOM is less than JUMP_PERCENTAGE
				assign _JUMP_DISABLE 0
				assign _ACTION 2				
			end
		end
		assign _JUMP_DISABLE computing _JUMP_DISABLE add 1
		
		##########################################
		# ATTACK
		##########################################		
		when _ACTION is equal to 1
			key d for 300
			delay for 400
			assign _RANDOM random over 100		
			sync
				when MOVE_TO_RIGHT is true
					key right for 300
				otherwise 
					key left for 300
				end
			with
				key x for 100
				delay for 100
				key x for 100				
			end
			key d for 900			
			sync
				when MOVE_TO_RIGHT is true
					key right for 500
				otherwise 
					key left for 500
				end
			with
				key v for 200
			end			
		end

		##########################################
		# JUMP
		##########################################		
		when _ACTION is equal to 2			
			when JUMP_TO_UP is true
				sync
					when MOVE_TO_RIGHT is true
						key right for 300
					otherwise 
						key left for 300
					end
				with
					key x for 200
				end
				key v for 100
				delay for 500
			
			otherwise
				sync
					key down for 1200
				with
					when MOVE_TO_RIGHT is true
						key right for 200
					otherwise 
						key left for 200
					end
					key x for 100
					delay for 100
				end
				key d for 900
				#delay for 200
			end
		end
		
	end
	
with
	iterate forever
		assign BUFF_CHARGE true
		delay for 10 min
	end
	
with
	iterate forever
		import maple_story.txt HP_체크
		when HP_TEST is true
			key f1 for 100
			delay for 700
		otherwise
			delay for MONITOR_DELAY
		end
	end
	
with
	iterate forever
		import maple_story.txt MP_체크
		when MP_TEST is true
			key f2 for 100
			delay for 700
		otherwise
			delay for MONITOR_DELAY
		end
	end
	
with
	iterate forever		
		import maple_story.txt 거짓말탐지기_체크
		when TRUTH_TEST is true
			finish sync
		end		
		delay for 1000		
	end
	
with
	iterate forever
		import maple_story.txt 버튼누르기_보상받기
		import maple_story.txt 버튼누르기_다음
		delay for 1000
	end

end

sound alert
