exclusive
snapshot
snapshot

import bot_settings.txt INITIALIZE
assign MINIMAP.lt 0
assign MINIMAP.tp 60
assign MINIMAP.rt 220
assign MINIMAP.bm 150

assign LAYOUT.lt 30
assign LAYOUT.rt 130
assign LAYOUT.tf 700
assign LAYOUT.bc 0

assign POTION_HUD_TYPE 1
assign POTION_HP_THOLD 40
assign POTION_MP_THOLD 10

import button_settings.txt INITIALIZE

register DELAY_MONITOR
register DELAY_CHECK
assign DELAY_MONITOR 100
assign DELAY_CHECK duration 1 sec

register RETREAT_TIMER with in out
register RETREAT_CYCLE with period enter exit
assign RETREAT_CYCLE.period duration 20 min
assign RETREAT_CYCLE.enter duration 4 min
assign RETREAT_CYCLE.exit duration 20 sec

register TIMER_1 with dur ts on
register TIMER_2 with dur ts on
register TIMER_3 with dur ts on

register SKILL_1 with row col thold on
register SKILL_2 with row col thold on
register SKILL_3 with row col thold on
register SKILL_4 with row col thold on
register SKILL_5 with row col thold on

register TURN_AROUND_PERCENTAGE
assign TURN_AROUND_PERCENTAGE 10

register JUMP_STYLE
register JUMP_UP_PERCENTAGE
register JUMP_DN_PERCENTAGE
register JUMP_DISABLE_COUNT
assign JUMP_STYLE 0
assign JUMP_UP_PERCENTAGE 50
assign JUMP_DN_PERCENTAGE 50
assign JUMP_DISABLE_COUNT 2

register DEFAULT_ATTACK_WIDTH
register DEFAULT_JUMP_HEIGHT
assign DEFAULT_ATTACK_WIDTH 25
assign DEFAULT_JUMP_HEIGHT 30

register CHECK_MAP
register CHECK_FLAMEWOLF
register CHECK_RESCUE
register CHECK_ELITEBOSS
register CHECK_MVPEXP

alias [PLAYER] among "bot_union.txt" "bot_gyom.txt" "bot_kong.txt" "bot_dalkom.txt" "bot_signus.txt" "bot_amber.txt"
import [PLAYER] SETUP


################################################################

# Global internal variables
register BOT_POS with x y
register BOT_X_UNKNOWN
register BOT_Y_UNKNOWN
register BOT_HORZ_STOPPED
register BOT_VERT_STOPPED
register BOT_LEFT_OUT
register BOT_RIGHT_OUT
register BOT_AT_BOTTOM
register BOT_AT_TOP

register QUIT
assign QUIT false

register ROUTINE
assign ROUTINE 0	# Hunt: 0, Retreat: 1

# Global temporary variables
register _BLOB with x y width height num lt tp rt bm
register _SPR with x y
register _READ with x y
register _IN with id stat x y
register _RANDOM
register _NOW


# TEST
assign RETREAT_CYCLE.period duration 1 min
assign RETREAT_CYCLE.enter duration 20 sec
assign RETREAT_CYCLE.exit duration 10 sec
assign RETREAT_TIMER.in time later 30 sec
assign RETREAT_TIMER.out time later 5 sec

import bot_settings.txt INIT_MAPNAME

import bot_settings.txt INIT_SCREEN
when SCREEN_ENABLED is true
	sound cool
	delay for 1 sec
end

sync
	import bot_settings.txt LOCATE_POTIONBAR
	when POTION_BAR is less than 0
		finish sync
	end
	import bot_settings.txt LOCATE_SKILLBAR
	when SKILL_BAR is less than 0
		finish sync
	end

	# =========================================================
	# Execute routine
	# =========================================================
	iterate forever
		when ROUTINE is equal to 0
			import bot_hunt.txt
		end

		when ROUTINE is equal to 1
			import bot_retreat.txt
		end
	end
	
with
	register _PREV with x y

	iterate forever
		when QUIT is true
			finish sync
		end

		# Global screen snapshot
		snapshot
		
		# =========================================================
		# Monitor bot position
		# =========================================================
		import bot_settings.txt LOCATE_PLAYER

		when PLAYER_POS.x is less than 0
			assign BOT_X_UNKNOWN true
		otherwise
			assign BOT_X_UNKNOWN false
			assign BOT_POS.x PLAYER_POS.x
		end

		when PLAYER_POS.y is less than 0
			assign BOT_Y_UNKNOWN true
		otherwise
			assign BOT_Y_UNKNOWN false
			assign BOT_POS.y PLAYER_POS.y
		end
		
		when BOT_POS.y is not below 0
			when _PREV.x is equal to BOT_POS.x
				assign BOT_HORZ_STOPPED true
			otherwise
				assign BOT_HORZ_STOPPED false
			end
			assign _PREV.x BOT_POS.x			

			when BOT_POS.x is less than LAYOUT.lt
				assign BOT_LEFT_OUT true
			otherwise
				assign BOT_LEFT_OUT false
			end
			when BOT_POS.x is greater than LAYOUT.rt
				assign BOT_RIGHT_OUT true
			otherwise
				assign BOT_RIGHT_OUT false
			end
		end

		when BOT_POS.y is not below 0
			when _PREV.y is equal to BOT_POS.y
				assign BOT_VERT_STOPPED true
			otherwise
				assign BOT_VERT_STOPPED false
			end
			assign _PREV.y BOT_POS.y

			when BOT_POS.y is less than LAYOUT.tf
				assign BOT_AT_TOP true
			otherwise
				assign BOT_AT_TOP false
			end
			when BOT_POS.y is greater than LAYOUT.bc
				assign BOT_AT_BOTTOM true
			otherwise
				assign BOT_AT_BOTTOM false
			end
		end

		delay for DELAY_MONITOR
	end
		
with
	iterate forever
		import bot_settings.txt CHECK_POTION
		when POTION_TEST is true
			key f1 for 100
			delay for 700
		otherwise
			delay for 500
		end
	end

end

# Script finished
sound alert
