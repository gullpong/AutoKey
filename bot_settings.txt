#########################################################
> INITIALIZE

font dotum8.fnt

gawi bot.gwi as GWI_BOT

register MONITOR_DELAY
register MONITOR_PERSEC
assign MONITOR_DELAY 200
assign MONITOR_PERSEC 5

register MINIMAP with lt tp rt bm
register LAYOUT with lt rt tf bc

register PLAYER_POS with x y
register RIVAL_POS with x y
register RPORTAL_POS with x y

register MAPOUT_TEST
register STONE_TEST
register CURSE_TEST
register ELITEBOSS_TEST
register MVPEXP_TEST

register POTION_TEST
register POTION_HP_THOLD
register POTION_MP_THOLD
register POTION_BAR
assign POTION_BAR 613
register POTION_HUD_TYPE		# 0: none, 1: HP/MP, 2: HP only
assign POTION_HUD_TYPE 1

register SKILL_TEST
register SKILL_INDEX with row col
register SKILL_BAR
assign SKILL_BAR 1019

register SCREEN_TEST
register SCREEN_ENABLED
register SCREEN_CHECK_N with en lt tp rt bm
register SCREEN_CHECK_W with en lt tp rt bm
register SCREEN_CHECK_S with en lt tp rt bm
register SCREEN_CHECK_E with en lt tp rt bm
register SCREEN_CHECK_C with en lt tp rt bm

break


#########################################################
> INPUT_STAGE

sub
	register _IN with id stat x y

	delay for 500
	sound plus
	hook _IN with button left up
	sound click
	assign MINIMAP.lt _IN.x
	assign MINIMAP.tp _IN.y

	delay for 500
	sound plus
	hook _IN with button left up
	sound click
	assign MINIMAP.rt _IN.x
	assign MINIMAP.bm _IN.y

	delay for 500
	sound plus
	hook _IN with button left up
	sound click
	assign LAYOUT.lt _IN.x

	delay for 500
	sound plus
	hook _IN with button left up
	sound click
	assign LAYOUT.rt _IN.x

	delay for 500
	sound plus
	hook _IN with button left up
	sound click
	assign LAYOUT.tf _IN.y

	delay for 500
	sound plus
	hook _IN with button left up
	sound click
	assign LAYOUT.bc _IN.y

	delay for 500
	sound cool
	hook _IN with key space down
	sound coin
end

break


#########################################################
> INPUT_STAGE_FLAT

sub
	register _IN with id stat x y

	delay for 500
	sound plus
	hook _IN with button left up
	sound click
	assign MINIMAP.lt _IN.x
	assign MINIMAP.tp _IN.y

	delay for 500
	sound plus
	hook _IN with button left up
	sound click
	assign MINIMAP.rt _IN.x
	assign MINIMAP.bm _IN.y

	delay for 500
	sound plus
	hook _IN with button left up
	sound click
	assign LAYOUT.lt _IN.x

	delay for 500
	sound plus
	hook _IN with button left up
	sound click
	assign LAYOUT.rt _IN.x

	delay for 500
	sound cool
	hook _IN with key space down
	sound coin
end

break


#########################################################
> LOCATE_PLAYER

sub
	register _BLOB with x y width height num lt tp rt bm
	blob _BLOB for 255 221 68 over MINIMAP.lt MINIMAP.tp MINIMAP.rt MINIMAP.bm
	assign PLAYER_POS.x _BLOB.x
	assign PLAYER_POS.y _BLOB.y
end

break


#########################################################
> LOCATE_RIVAL

sub
	register _BLOB with x y width height num lt tp rt bm
	blob _BLOB for 238 0 0 over MINIMAP.lt MINIMAP.tp MINIMAP.rt MINIMAP.bm
	assign RIVAL_POS.x _BLOB.x
	assign RIVAL_POS.y _BLOB.y
end

break


#########################################################
> LOCATE_RPORTAL

sub
	register _BLOB with x y width height num lt tp rt bm
	blob _BLOB for 255 136 102 over MINIMAP.lt MINIMAP.tp MINIMAP.rt MINIMAP.bm
	assign RPORTAL_POS.x _BLOB.x
	assign RPORTAL_POS.y _BLOB.y
end

break


#########################################################
> CHECK_MAPOUT

assign MAPOUT_TEST false

sub
	register _BLOB with x y width height num lt tp rt bm
	blob _BLOB lighter 50 50 50 by 0 over 0 0 180 60
	when _BLOB.num is less than 1
		assign MAPOUT_TEST true
	end
end

break


#########################################################
> CHECK_STONE

assign STONE_TEST false

sub
	register _SPR with x y
	sprite find _SPR for 1 using GWI_BOT by 20 over 0 0 1360 600
	when _SPR.x is greater than 0
		assign STONE_TEST true
	end
end

break


#########################################################
> CHECK_CURSE

assign CURSE_TEST false

sub
	register _BLOB with x y width height num lt tp rt bm
	blob _BLOB for 187 119 255 over 524 208 931 277
	when _BLOB.num is greater than 500
		assign CURSE_TEST true
	end
end

break


#########################################################
> CHECK_ELITEBOSS

assign ELITEBOSS_TEST false

sub
	register _SPR with x y
	sprite find _SPR for 2 using GWI_BOT over 413 41 423 51
	when _SPR.x is greater than 0
		assign ELITEBOSS_TEST true
	otherwise
		sprite find _SPR for 2 using GWI_BOT over 583 41 593 51
		when _SPR.x is greater than 0
			assign ELITEBOSS_TEST true
		end
	end
end

break


#########################################################
> CHECK_MVPEXP

assign MVPEXP_TEST false

sub
	register _READ with x y
	iterate 1 times
		read _READ for "°æ»Ñ" of 255 136 238 over 0 660 560 755
		when _READ.x is greater than 0
			assign MVPEXP_TEST true
			finish iterate
		end
		read _READ for "¤¡¤³" of 255 136 238 over 0 660 560 755
		when _READ.x is greater than 0
			assign MVPEXP_TEST true
			finish iterate
		end
		read _READ for "¸¶°æ" of 255 136 238 over 0 660 560 755
		when _READ.x is greater than 0
			assign MVPEXP_TEST true
			finish iterate
		end

		read _READ for "°æ»Ñ" of 68 34 0 over 0 660 560 755
		when _READ.x is greater than 0
			assign MVPEXP_TEST true
			finish iterate
		end
		read _READ for "¤¡¤³" of 68 34 0 over 0 660 560 755
		when _READ.x is greater than 0
			assign MVPEXP_TEST true
			finish iterate
		end
		read _READ for "¸¶°æ" of 68 34 0 over 0 660 560 755
		when _READ.x is greater than 0
			assign MVPEXP_TEST true
			finish iterate
		end

		read _READ for "°æ»Ñ" of 119 0 68 over 0 660 560 755
		when _READ.x is greater than 0
			assign MVPEXP_TEST true
			finish iterate
		end
		read _READ for "¤¡¤³" of 119 0 68 over 0 660 560 755
		when _READ.x is greater than 0
			assign MVPEXP_TEST true
			finish iterate
		end
		read _READ for "¸¶°æ" of 119 0 68 over 0 660 560 755
		when _READ.x is greater than 0
			assign MVPEXP_TEST true
			finish iterate
		end
	end

end

break


#########################################################
> LOCATE_POTIONBAR

sub
	register _LOCATED
	assign _LOCATED false
	iterate 10 times
		snapshot
		register _SPR with x y
		sprite find _SPR for 4 using GWI_BOT by 20 over 0 686 1360 768
		when _SPR.x is greater than 0
			assign POTION_BAR computing _SPR.x add 1
			assign _LOCATED true
			finish iterate
		end
		delay for 100
	end
	when _LOCATED is false
		assign POTION_BAR computing 0 sub 1
	end
end

break


#########################################################
> CHECK_POTION

assign POTION_TEST false

sub
	register _BLOB with x y width height num lt tp rt bm
	register _POR
	register _END
	assign _END computing POTION_BAR add 164

	when POTION_HUD_TYPE is equal to 1
		assign _POR computing POTION_HP_THOLD mul 164
		assign _POR computing _POR div 100
		blob _BLOB lighter 240 60 150 by 0 over POTION_BAR 717 _END 717
		when _BLOB.width is less than _POR
			assign POTION_TEST true
		otherwise
			assign _POR computing POTION_MP_THOLD mul 164
			assign _POR computing _POR div 100
			blob _BLOB lighter 0 210 230 by 0 over POTION_BAR 733 _END 733
			when _BLOB.num is less than _POR
				assign POTION_TEST true
			end
		end
	end

	when POTION_HUD_TYPE is equal to 2
		assign _POR computing POTION_HP_THOLD mul 164
		assign _POR computing _POR div 100
		blob _BLOB lighter 240 60 150 by 0 over POTION_BAR 733 _END 733
		when _BLOB.width is less than _POR
			assign POTION_TEST true
		end
	end
end

break


#########################################################
> LOCATE_SKILLBAR

sub
	register _LOCATED
	assign _LOCATED false
	iterate 10 times
		snapshot
		register _SPR with x y
		sprite find _SPR for 0 using GWI_BOT over 0 686 1360 768
		when _SPR.x is greater than 0
			assign SKILL_BAR computing _SPR.x add 4
			assign _LOCATED true
			finish iterate
		end
		delay for 100
	end
	when _LOCATED is false
		assign SKILL_BAR computing 0 sub 1
	end
end

break


#########################################################
> CHECK_SKILL

assign SKILL_TEST false

sub
	register _BASE with x y
	assign _BASE.x computing SKILL_INDEX.col mul 35
	assign _BASE.x computing _BASE.x add SKILL_BAR
	assign _BASE.y computing SKILL_INDEX.row mul 35
	assign _BASE.y computing _BASE.y add 688

	register _BLOB with x y width height num lt tp rt bm
	register _POS with lt tp rt bm

	assign _POS.lt computing _BASE.x add 0
	assign _POS.rt computing _BASE.x add 5
	assign _POS.tp computing _BASE.y add 2
	assign _POS.bm computing _BASE.y add 9
	blob _BLOB for 221 221 221 over _POS.lt _POS.tp _POS.rt _POS.bm
	when _BLOB.num is greater than 0

		blob _BLOB for 102 102 102 over _POS.lt _POS.tp _POS.rt _POS.bm
		when _BLOB.num is greater than 0

			assign _POS.lt computing _BASE.x add 0
			assign _POS.rt computing _BASE.x add 25
			assign _POS.tp computing _BASE.y add 31
			assign _POS.bm computing _BASE.y add 31
			blob _BLOB lighter 1 1 1 by 0 over _POS.lt _POS.tp _POS.rt _POS.bm
			when _BLOB.num is greater than 10
				assign SKILL_TEST true
			end
		end
	end
end

break


#########################################################
> INIT_SCREEN

assign SCREEN_ENABLED false

sub
	register _SPR with x y

	snapshot

	sprite find _SPR for 5 using GWI_BOT over 0 0 1360 768
	when _SPR.x is greater than 0
		assign SCREEN_CHECK_N.en true
		#assign SCREEN_CHECK_N.lt computing _SPR.x sub 189
		assign SCREEN_CHECK_N.lt computing _SPR.x sub 169
		assign SCREEN_CHECK_N.tp computing _SPR.y add 16
		#assign SCREEN_CHECK_N.rt computing _SPR.x add 181
		assign SCREEN_CHECK_N.rt computing _SPR.x add 201
		assign SCREEN_CHECK_N.bm computing _SPR.y add 165
		assign SCREEN_ENABLED true
	end

	sprite find _SPR for 6 using GWI_BOT over 0 0 1360 768
	when _SPR.x is greater than 0
		assign SCREEN_CHECK_W.en true
		assign SCREEN_CHECK_W.lt computing _SPR.x sub 110
		assign SCREEN_CHECK_W.tp computing _SPR.y add 14
		assign SCREEN_CHECK_W.rt computing _SPR.x add 103
		assign SCREEN_CHECK_W.bm computing _SPR.y add 313
		assign SCREEN_ENABLED true
	end

	sprite find _SPR for 7 using GWI_BOT over 0 0 1360 768
	when _SPR.x is greater than 0
		assign SCREEN_CHECK_S.en true
		assign SCREEN_CHECK_S.lt computing _SPR.x sub 170
		assign SCREEN_CHECK_S.tp computing _SPR.y add 14
		assign SCREEN_CHECK_S.rt computing _SPR.x add 153
		assign SCREEN_CHECK_S.bm computing _SPR.y add 279
		assign SCREEN_ENABLED true
	end

	sprite find _SPR for 8 using GWI_BOT over 0 0 1360 768
	when _SPR.x is greater than 0
		assign SCREEN_CHECK_E.en true
		assign SCREEN_CHECK_E.lt computing _SPR.x sub 144
		assign SCREEN_CHECK_E.tp computing _SPR.y add 16
		assign SCREEN_CHECK_E.rt computing _SPR.x add 101
		assign SCREEN_CHECK_E.bm computing _SPR.y add 362
		assign SCREEN_ENABLED true
	end
	
	sprite find _SPR for 9 using GWI_BOT over 0 0 1360 768
	when _SPR.x is greater than 0
		assign SCREEN_CHECK_C.en true
		assign SCREEN_CHECK_C.lt computing _SPR.x sub 77
		assign SCREEN_CHECK_C.tp computing _SPR.y add 16
		assign SCREEN_CHECK_C.rt computing _SPR.x add 89
		assign SCREEN_CHECK_C.bm computing _SPR.y add 26
		assign SCREEN_ENABLED true
	end	

	when SCREEN_ENABLED is true
		crop SCREEN_CHECK_N.lt SCREEN_CHECK_N.tp SCREEN_CHECK_N.rt SCREEN_CHECK_N.bm into GWI_SCREEN
		crop SCREEN_CHECK_W.lt SCREEN_CHECK_W.tp SCREEN_CHECK_W.rt SCREEN_CHECK_W.bm into GWI_SCREEN
		crop SCREEN_CHECK_S.lt SCREEN_CHECK_S.tp SCREEN_CHECK_S.rt SCREEN_CHECK_S.bm into GWI_SCREEN
		crop SCREEN_CHECK_E.lt SCREEN_CHECK_E.tp SCREEN_CHECK_E.rt SCREEN_CHECK_E.bm into GWI_SCREEN
		crop SCREEN_CHECK_C.lt SCREEN_CHECK_C.tp SCREEN_CHECK_C.rt SCREEN_CHECK_C.bm into GWI_SCREEN
	end
end

break


#########################################################
> CHECK_SCREEN

assign SCREEN_TEST false

sub
	register _BLOB with x y width height num lt tp rt bm
	when SCREEN_ENABLED is true
		iterate 1 times
			when SCREEN_CHECK_N.en is true
				sprite diff _BLOB for 0 using GWI_SCREEN at SCREEN_CHECK_N.lt SCREEN_CHECK_N.tp
				when _BLOB.num is greater than 2000
					assign SCREEN_TEST true
					finish iterate
				end
			end

			when SCREEN_CHECK_W.en is true
				sprite diff _BLOB for 1 using GWI_SCREEN at SCREEN_CHECK_W.lt SCREEN_CHECK_W.tp
				when _BLOB.num is greater than 1000
					assign SCREEN_TEST true
					finish iterate
				end
			end

			when SCREEN_CHECK_S.en is true
				sprite diff _BLOB for 2 using GWI_SCREEN at SCREEN_CHECK_S.lt SCREEN_CHECK_S.tp
				when _BLOB.num is greater than 1000
					assign SCREEN_TEST true
					finish iterate
				end
			end

			when SCREEN_CHECK_E.en is true
				sprite diff _BLOB for 3 using GWI_SCREEN at SCREEN_CHECK_E.lt SCREEN_CHECK_E.tp
				when _BLOB.num is greater than 1000
					assign SCREEN_TEST true
					finish iterate
				end
			end

			when SCREEN_CHECK_C.en is true
				sprite diff _BLOB for 4 using GWI_SCREEN at SCREEN_CHECK_C.lt SCREEN_CHECK_C.tp
				when _BLOB.num is greater than 50
					assign SCREEN_TEST true
					finish iterate
				end
			end

		end
	end
end

break
