
register DO_HUNT

assign CHECK_MAP true

sync
	register _MOVE_LEFT
	register _MOVE_RIGHT
	register _MOVE_LITTLE
	register _DIST
	
	iterate forever
		# =========================================================
		# Perform timer action
		# =========================================================
		when TIMER_1.on is true
			import [PLAYER] TIMER_1
			assign TIMER_1.on false
		end

		when TIMER_2.on is true
			import [PLAYER] TIMER_2
			assign TIMER_2.on false
		end

		when TIMER_3.on is true
			import [PLAYER] TIMER_3
			assign TIMER_3.on false
		end

		# =========================================================
		# Do special action
		# =========================================================
		when DO_HUNT is true
			when BOT_X_UNKNOWN is false
				when BOT_POS.x is greater than 40
					assign _MOVE_LEFT true
					assign _DIST computing BOT_POS.x sub 40
					when _DIST is less than 5
						assign _MOVE_LITTLE true
					otherwise
						assign _MOVE_LITTLE false
					end
				otherwise
					assign _MOVE_LEFT false
				end
				
				when BOT_POS.x is less than 37
					assign _MOVE_RIGHT true
					assign _DIST computing 37 sub BOT_POS.x
					when _DIST is less than 5
						assign _MOVE_LITTLE true
					otherwise
						assign _MOVE_LITTLE false
					end				
				otherwise
					assign _MOVE_RIGHT false
				end
			end
			
			when _MOVE_LEFT is true
				when _MOVE_LITTLE is true
					key left for 200
				otherwise
					key left for 600
				end
			otherwise
				when _MOVE_RIGHT is true
					when _MOVE_LITTLE is true
						key right for 200
					otherwise
						key right for 600
					end
				otherwise
					assign _RANDOM random over 100
					when _RANDOM is less than 50
						key left for 100
					otherwise
						key right for 100
					end
					
					assign CHECK_MAP false
					key up for 200
					
					sprite find _SPR for 15 using GWI_BOT over 0 0 50 60
					when _SPR.x is less than 0
						iterate forever
							import bot_settings.txt CHECK_MAPNAME
							when MAPNAME_TEST is true
								finish iterate
							end			
							delay for DELAY_MONITOR
						end
						delay for 1 sec
						
						assign DO_HUNT false
						
						# Change routine
						assign ROUTINE 0
						finish sync
					end
				end
			end
		end
			
		delay for 500
	end
	
with
	iterate forever
		# =========================================================
		# Check timer
		# =========================================================
		assign _NOW time

		when TIMER_1.dur is greater than 0
			when TIMER_1.ts is equal to 0
				assign TIMER_1.ts time later TIMER_1.dur
			end
			when _NOW is greater than TIMER_1.ts
				assign TIMER_1.on true
				assign TIMER_1.ts time later TIMER_1.dur
			end
		end

		when TIMER_2.dur is greater than 0
			when TIMER_2.ts is equal to 0
				assign TIMER_2.ts time later TIMER_2.dur
			end
			when _NOW is greater than TIMER_2.ts
				assign TIMER_2.on true
				assign TIMER_2.ts time later TIMER_2.dur
			end
		end
		
		when TIMER_3.dur is greater than 0
			when TIMER_3.ts is equal to 0
				assign TIMER_3.ts time later TIMER_3.dur
			end
			when _NOW is greater than TIMER_3.ts
				assign TIMER_3.on true
				assign TIMER_3.ts time later TIMER_3.dur
			end
		end

		# =========================================================
		# Check special action
		# =========================================================
		when RETREAT_TIMER.out is unequal to 0
			when _NOW is greater than RETREAT_TIMER.out
				assign RETREAT_TIMER.out 0				
				assign DO_HUNT true
			end
		end

		delay for DELAY_CHECK
	end

with
	register _NOTIFY
	register _MAP_COUNT	
	register _VIOLETTA_COUNT
	register _TEMP
	
	iterate forever
		# =========================================================
		# Check map
		# =========================================================
		when CHECK_MAP is true
			sprite find _SPR for 15 using GWI_BOT over 0 0 50 60
			when _SPR.x is less than 0
				increase _MAP_COUNT
				when _MAP_COUNT is greater than 2
					assign QUIT true
				end		
			otherwise
				assign _MAP_COUNT 0
			end
		otherwise
			assign _MAP_COUNT 0
		end

		# =========================================================
		# Notify game status
		# =========================================================
		import bot_settings.txt CHECK_VIOLETTA
		when VIOLETTA_TEST is true
			increase _VIOLETTA_COUNT
			when _VIOLETTA_COUNT is equal to 1
				assign RETREAT_TIMER.in time later RETREAT_CYCLE.period
				assign RETREAT_TIMER.in computing RETREAT_TIMER.in sub RETREAT_CYCLE.enter
				
				assign RETREAT_TIMER.out time later 45 sec
			end
			assign _NOTIFY 6
		otherwise
			assign _VIOLETTA_COUNT 0
		end

		when _NOTIFY is unequal to 0
			when _NOTIFY is equal to 1
				sound buzz
			end
			when _NOTIFY is equal to 2
				sound bump
			end
			when _NOTIFY is equal to 3
				sound plus
			end
			when _NOTIFY is equal to 4
				sound dingdong
			end
			when _NOTIFY is equal to 5
				sound coin
			end
			when _NOTIFY is equal to 6
				sound boing
			end			
			when _NOTIFY is equal to 9
				sound alert
			end
			delay for 500
		end
		
		delay for DELAY_CHECK
	end
end
